[tox]
env_list =
    # All Pythons, oldest Django
    {py39,py310,py311,py312,py313}-django42-minioknown
    # Newest Python, all Djangos
    py313-django{42,51,52}-minioknown
    # Newest Python, newest Django, newest Minio
    py313-django52-minio
    lint
    docs
    pyright

[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312
    3.13: py313, lint, docs, pyright

[testenv]
package = wheel
set_env =
    PYTHONDONTWRITEBYTECODE = 1
    MINIO_STORAGE_ENDPOINT = {env:MINIO_STORAGE_ENDPOINT:localhost:9153}
    MINIO_STORAGE_ACCESS_KEY = {env:MINIO_STORAGE_ACCESS_KEY:weak_access_key}
    MINIO_STORAGE_SECRET_KEY = {env:MINIO_STORAGE_SECRET_KEY:weak_secret_key}
    TOX_ENVNAME = {envname}
deps =
    django42: Django==4.2.*
    django51: Django==5.1.*
    django52: Django==5.2.*
    minio: minio
    minioknown: minio==7.1.12
    -rdev-requirements.txt
commands =
    pytest {posargs}

[testenv:py313-django52-minioknown]
commands =
    pytest --cov --cov-append --cov-report=term-missing {posargs}

[testenv:coverage-report]
package = skip
depends = py313-django52-minioknown
deps =
    coverage[toml]
commands =
    coverage report
    coverage html

[testenv:pyright]
package = editable
depends = py313-django52-minio
deps =
    pyright
    django-stubs==5.2.*
    types-requests
    -rdev-requirements.txt
commands =
    pyright --level WARNING

[testenv:lint]
package = skip
set_env=
    PYTHONWARNINGS = ignore
deps =
    ruff==0.11.8
commands =
    ruff check
    ruff format --check

[testenv:fmt]
package = skip
set_env=
    PYTHONWARNINGS = ignore
deps =
    ruff==0.11.8
commands =
    ruff check --fix-only
    ruff format

[testenv:docs]
package = skip
deps =
    mkdocs
commands =
    mkdocs build
