[tox]
envlist =
       {py38,py39,py310,py311}-django42-minioknown
       py311-django{32,42}-minioknown
       py311-django42-minio
       lint
       docs
       pyright

[gh-actions]
python =
       3.8: py38
       3.9: py39
       3.10: py310
       3.11: py311, lint, docs, pyright

[pytest]
pythonpath = . tests
DJANGO_SETTINGS_MODULE = django_minio_storage_tests.settings
addopts=--tb=short
python_files = tests.py test_*.py *_tests.py
django_find_project = false

[testenv]
commands = pytest {posargs}
setenv =
        PYTHONDONTWRITEBYTECODE=1
        MINIO_STORAGE_ENDPOINT={env:MINIO_STORAGE_ENDPOINT:localhost:9153}
        MINIO_STORAGE_ACCESS_KEY={env:MINIO_STORAGE_ACCESS_KEY:weak_access_key}
        MINIO_STORAGE_SECRET_KEY={env:MINIO_STORAGE_SECRET_KEY:weak_secret_key}
        TOX_ENVNAME={envname}
deps =
        django32: Django==3.2.*
        django42: Django==4.2.*
        minio: minio
        minioknown: minio==7.1.12
        -rdev-requirements.txt

[testenv:py311-django42-minioknown]
commands = pytest --cov --cov-append --cov-report=term-missing {posargs}

[testenv:coverage-report]
basepython = python3.11
deps = coverage[toml]
skip_install = true
commands =
    coverage report
    coverage html
depends=py311-django42-minioknown

[testenv:pyright]
basepython = python3
deps =
        pyright
        minio
        django-stubs==4.2.*
        Django==4.2.*
        -rdev-requirements.txt
commands =
    pyright --level WARNING


[testenv:lint]
setenv=
    PYTHONWARNINGS=ignore
basepython = python3
deps =
        ruff==0.0.270
        black==22.3.0
commands =
        ruff check .
        black --check --diff .

[testenv:fmt]
setenv=
    PYTHONWARNINGS=ignore
basepython = python3
deps =
        pyupgrade-directories
        ruff==0.0.270
        isort==5.12.0
        black==23.3.0
commands =
        pyup_dirs --exit-zero-even-if-changed --py36-plus minio_storage tests
        isort .
        black .

[testenv:docs]
basepython = python3
deps = mkdocs
commands = mkdocs build

